// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RogueLike.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RogueLike.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roguelike_google_protocol {

namespace {

const ::google::protobuf::Descriptor* actor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  actor_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RogueLike_2eproto() {
  protobuf_AddDesc_RogueLike_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RogueLike.proto");
  GOOGLE_CHECK(file != NULL);
  actor_descriptor_ = file->message_type(0);
  static const int actor_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, xpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, ypos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, asciicode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, block_),
  };
  actor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      actor_descriptor_,
      actor::default_instance_,
      actor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(actor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(actor));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RogueLike_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    actor_descriptor_, &actor::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RogueLike_2eproto() {
  delete actor::default_instance_;
  delete actor_reflection_;
}

void protobuf_AddDesc_RogueLike_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017RogueLike.proto\022\031roguelike_google_prot"
    "ocol\"b\n\005actor\022\014\n\004xpos\030\001 \002(\005\022\014\n\004ypos\030\002 \002("
    "\005\022\021\n\tasciiCode\030\003 \002(\005\022\r\n\005color\030\004 \002(\005\022\014\n\004n"
    "ame\030\005 \002(\t\022\r\n\005block\030\006 \002(\010", 144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RogueLike.proto", &protobuf_RegisterTypes);
  actor::default_instance_ = new actor();
  actor::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RogueLike_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RogueLike_2eproto {
  StaticDescriptorInitializer_RogueLike_2eproto() {
    protobuf_AddDesc_RogueLike_2eproto();
  }
} static_descriptor_initializer_RogueLike_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int actor::kXposFieldNumber;
const int actor::kYposFieldNumber;
const int actor::kAsciiCodeFieldNumber;
const int actor::kColorFieldNumber;
const int actor::kNameFieldNumber;
const int actor::kBlockFieldNumber;
#endif  // !_MSC_VER

actor::actor()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roguelike_google_protocol.actor)
}

void actor::InitAsDefaultInstance() {
}

actor::actor(const actor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roguelike_google_protocol.actor)
}

void actor::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  xpos_ = 0;
  ypos_ = 0;
  asciicode_ = 0;
  color_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

actor::~actor() {
  // @@protoc_insertion_point(destructor:roguelike_google_protocol.actor)
  SharedDtor();
}

void actor::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void actor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* actor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return actor_descriptor_;
}

const actor& actor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RogueLike_2eproto();
  return *default_instance_;
}

actor* actor::default_instance_ = NULL;

actor* actor::New() const {
  return new actor;
}

void actor::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<actor*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(xpos_, color_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    block_ = false;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool actor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roguelike_google_protocol.actor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 xpos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xpos_)));
          set_has_xpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ypos;
        break;
      }

      // required int32 ypos = 2;
      case 2: {
        if (tag == 16) {
         parse_ypos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ypos_)));
          set_has_ypos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_asciiCode;
        break;
      }

      // required int32 asciiCode = 3;
      case 3: {
        if (tag == 24) {
         parse_asciiCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asciicode_)));
          set_has_asciicode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_color;
        break;
      }

      // required int32 color = 4;
      case 4: {
        if (tag == 32) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // required string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_block;
        break;
      }

      // required bool block = 6;
      case 6: {
        if (tag == 48) {
         parse_block:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &block_)));
          set_has_block();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roguelike_google_protocol.actor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roguelike_google_protocol.actor)
  return false;
#undef DO_
}

void actor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roguelike_google_protocol.actor)
  // required int32 xpos = 1;
  if (has_xpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->xpos(), output);
  }

  // required int32 ypos = 2;
  if (has_ypos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ypos(), output);
  }

  // required int32 asciiCode = 3;
  if (has_asciicode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->asciicode(), output);
  }

  // required int32 color = 4;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->color(), output);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // required bool block = 6;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->block(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roguelike_google_protocol.actor)
}

::google::protobuf::uint8* actor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roguelike_google_protocol.actor)
  // required int32 xpos = 1;
  if (has_xpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->xpos(), target);
  }

  // required int32 ypos = 2;
  if (has_ypos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ypos(), target);
  }

  // required int32 asciiCode = 3;
  if (has_asciicode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->asciicode(), target);
  }

  // required int32 color = 4;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->color(), target);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // required bool block = 6;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->block(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roguelike_google_protocol.actor)
  return target;
}

int actor::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 xpos = 1;
    if (has_xpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xpos());
    }

    // required int32 ypos = 2;
    if (has_ypos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ypos());
    }

    // required int32 asciiCode = 3;
    if (has_asciicode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->asciicode());
    }

    // required int32 color = 4;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }

    // required string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required bool block = 6;
    if (has_block()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void actor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const actor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const actor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void actor::MergeFrom(const actor& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xpos()) {
      set_xpos(from.xpos());
    }
    if (from.has_ypos()) {
      set_ypos(from.ypos());
    }
    if (from.has_asciicode()) {
      set_asciicode(from.asciicode());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_block()) {
      set_block(from.block());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void actor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void actor::CopyFrom(const actor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool actor::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void actor::Swap(actor* other) {
  if (other != this) {
    std::swap(xpos_, other->xpos_);
    std::swap(ypos_, other->ypos_);
    std::swap(asciicode_, other->asciicode_);
    std::swap(color_, other->color_);
    std::swap(name_, other->name_);
    std::swap(block_, other->block_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata actor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = actor_descriptor_;
  metadata.reflection = actor_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace roguelike_google_protocol

// @@protoc_insertion_point(global_scope)
